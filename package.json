{
  "private": true,
  "name": "@examples/monorepo",
  "version": "0.0.0",
  "engines": {
    "yarn": ">=1.7.0 <2",
    "node": ">=14.18.0"
  },
  "resolutions": {
    "**/@types/node": "14"
  },
  "devDependencies": {
    "@types/jsdom": "^11.0.4",
    "@types/node": "14",
    "@types/sinon": "^10.0.6",
    "@types/temp": "^0.8.29",
    "@types/uuid": "^7.0.3",
    "@typescript-eslint/eslint-plugin": "^4.8.1",
    "@typescript-eslint/eslint-plugin-tslint": "^4.8.1",
    "@typescript-eslint/parser": "^4.8.1",
    "concurrently": "^3.5.0",
    "debug": "^4.3.2",
    "eslint": "7",
    "eslint-plugin-deprecation": "~1.2.1",
    "eslint-plugin-import": "latest",
    "eslint-plugin-no-null": "latest",
    "eslint-plugin-no-unsanitized": "latest",
    "eslint-plugin-react": "^7.31.10",
    "glob": "^7.1.7",
    "if-env": "^1.0.4",
    "ignore-styles": "^5.0.1",
    "improved-yarn-audit": "^3.0.0",
    "jsdom": "^11.5.1",
    "lerna": "^6.0.1",
    "node-gyp": "^9.0.0",
    "nsfw": "^2.1.2",
    "nyc": "^15.0.0",
    "puppeteer": "^2.0.0",
    "puppeteer-to-istanbul": "^1.2.2",
    "rimraf": "^2.6.1",
    "tslint": "^5.12.0",
    "typedoc": "^0.22.11",
    "typedoc-plugin-external-module-map": "1.3.2",
    "typescript": "~4.5.5",
    "uuid": "^8.0.0",
    "yargs": "^15.3.1"
  },
  "scripts": {
    "all": "yarn -s install && yarn -s build",
    "browser": "yarn -s --cwd examples/browser",
    "build": "yarn -s compile && yarn -s build:examples",
    "build-p": "yarn -s compile && lerna run --scope=\"@theia/example-*\" bundle --parallel",
    "build:examples": "lerna run --scope=\"@theia/example-*\" bundle --parallel",
    "clean": "yarn -s rebuild:clean && yarn -s clean",
    "compile": "echo Compiling TypeScript sources... && yarn -s compile:tsc",
    "compile:tsc": "tsc -b",
    "electron": "yarn -s --cwd examples/electron",
    "preinstall": "node-gyp install",
    "prepare": "lerna run prepare && yarn -s compile",
    "rebuild:clean": "rimraf .browser_modules",
    "watch": "concurrently --kill-others -n tsc,browser,electron -c red,yellow,blue \"tsc -b -w --preserveWatchOutput\" \"yarn -s --cwd examples/browser watch:bundle\" \"yarn -s --cwd examples/electron watch:bundle\"",
    "watch:compile": "concurrently --kill-others -n cleanup,tsc -c magenta,red \"ts-clean packages/* -w\" \"tsc -b -w --preserveWatchOutput\""
  },
  "workspaces": [
    "examples/*",
    "packages/*"
  ]
}
